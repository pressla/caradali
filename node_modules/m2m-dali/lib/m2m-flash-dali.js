
var fs = require ('fs');
var fs = require ('async');

    serialPort = new Serial (serialdev, {baudrate:115200}, false);
	serialPort.on('data', function(data) {
		console.log('info','Serial DALI data received: ' + data);
	});

var magic = [
	['DUST',500,'txt'],
	['GOLD',500,'txt'],
	['firmware.hex',500,'file']
]


exports.executeSeq = function (seq) {
	console.log('info','Begin executeSeq');
    serialPort.open(function (err) {
        if (err) {
            console.log('info', 'Error open serialport : '+ err);
            
        } else {
			async.eachSeries (seq, sendcmd, executeSeqComplete);
		}
	});
}

function executeSeqComplete(err) {
	serialPort.close();
	if (err)
		console.log('info','executeSeq Failed');
	else
		console.log('info','[executeSeqComplete]');
}

function sendcmd(opcode, callback) {
    console.log('info','Send: '+ opcode[0]);
    switch (opcode[2]) {
		case 'txt':
	    	sendSeq(opcode);
	    	break;
	    case 'file':
	    	break;
    }

	var result = 'ok';
    setTimeout(function(){
      callback(null, result);
    }, opcode[1]);	
}

function sendSeq(msg) {
    var frame = msg;
    serialPort.write(frame, function(err, results) {
        if (err) {
            console.log('info', 'Error Write 1'+frame+' to serialport : '+ err);
        }
        console.log('info','DALI.FLASH:'+frame+' bytes: ' + results);
    });
}