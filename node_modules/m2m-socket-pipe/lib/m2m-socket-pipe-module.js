//m2m-socket-pipe.js
//Alex Pressl for imitrix GmbH
//use:
// var m2m = require('m2m-socket-pipe');
// createLogger ('0815:666');
// m2mlog ('lightcontrol', 'cmd', {cmd:'Lamp 100%', err:'no answer'});

// will send following socket cluster post to channel 'lightcontrol':
/*
[
  {
    "timestamp": "1427496743000",
    "node_id": "0815:666",
    "content": "cmd"
  },
  {
    "cmd": "Lamp 100%",
    "err": "no answer"
   }
]
*/
exports.pipeoptions = myoptions = {
  hostname: 'acc.ledwifi.de',
  port: 8060,
  consoleOutput:true
};
var deviceID	= 'nobody';

;

exports.createLogger = function  (devID) {
	deviceID = devID;
	console.log('socketPipe created for '+devID);
}

  var header	= {};
  var prot	= [2];

exports.m2mlog = function(channelname, messagename, payload){

	header.timestamp 	= (new Date()).getTime();
	header.node_id 		= deviceID;
	header.content 		= messagename;
  
	prot[0] = header;
	prot[1] = payload;
	send(prot);

  if (myoptions.consoleOutput==true) {
    if (typeof payload != 'string') {
      payload = JSON.stringify(payload);
    }
    console.log('['+header.timestamp+' '+header.node_id+' '+header.content+'] '+payload.replace('\n\r',''));
  }

}

function send(packet) {
    try {
      var dgram = require('dgram');
      var socket = dgram.createSocket('udp4');
      var buf = new Buffer(JSON.stringify(packet));
      //console.log('>>>>>>>>>>>'+JSON.stringify(packet));
      socket.send(buf, 0, buf.length, myoptions.port, myoptions.hostname, function(err,bytes) {socket.close();});
    } catch(err) {
      console.log('exception socket send udp '+err);
    }
};